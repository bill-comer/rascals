package uk.co.utilisoft.afms.domain;
// Generated 26-Nov-2010 10:40:14 by Hibernate Tools 3.1.0.beta5
// with HibernateUtils.


import java.util.Calendar;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * UrlGroup generated by hbm2java.
 */
@Entity
@Table(name="AMOPS_URLGROUP")
@SuppressWarnings("serial")
public class UrlGroup  implements java.io.Serializable
{
  // Fields

  private Long mUrlGroupPk;
  private Calendar mLastUpdated;
  private String mCode;
  private String mDescription;
  private Boolean mAllowByDefault;
  private Boolean mAlwaysRequired;
  private Set<Url> mUrls = new HashSet<Url>(0);
  //private Set<UrlGroup> mPreRequisites = new HashSet<UrlGroup>(0);
  private Set<Role> mRoles = new HashSet<Role>(0);

  // Constructors

  /** Default constructor. */
  public UrlGroup()
  {
  }

  /**
   * Minimal constructor.
   * @param aUrlGroupPk The required value
   * @param aCode The required value
   */
  public UrlGroup(Long aUrlGroupPk, String aCode)
  {
    mUrlGroupPk = aUrlGroupPk;
    mCode = aCode;
  }

  /**
   * Full constructor.
   * @param aUrlGroupPk The required value
   * @param aCode The required value
   * @param aDescription The required value
   * @param aAllowByDefault The required value
   * @param aAlwaysRequired The required value
   * @param aUrls The required value
   * @param aPreRequisites The required value
   * @param aRoles The required value
   */
  public UrlGroup(Long aUrlGroupPk, String aCode, String aDescription,
    Boolean aAllowByDefault, Boolean aAlwaysRequired, Set<Url> aUrls,
    Set<UrlGroup> aPreRequisites, Set<Role> aRoles)
  {
    mUrlGroupPk = aUrlGroupPk;
    mCode = aCode;
    mDescription = aDescription;
    mAllowByDefault = aAllowByDefault;
    mAlwaysRequired = aAlwaysRequired;
    mUrls = aUrls;
    //mPreRequisites = aPreRequisites;
    mRoles = aRoles;
  }

  // Property accessors and mutators

  /**
   * @return urlGroupPk
   */
  @Id
  @Column(name="URLGROUP_PK", nullable=false)
  public Long getUrlGroupPk()
  {
      return mUrlGroupPk;
  }
  /**
   * @param aUrlGroupPk The required value
   */
  public void setUrlGroupPk(Long aUrlGroupPk)
  {
      mUrlGroupPk = aUrlGroupPk;
  }

  /**
   * @return lastUpdated
   */
  @Column(name="LAST_UPD", nullable=false)
  public Calendar getLastUpdated()
  {
      return mLastUpdated;
  }
  /**
   * @param aLastUpdated The required value
   */
  public void setLastUpdated(Calendar aLastUpdated)
  {
      mLastUpdated = aLastUpdated;
  }

  /**
   * @return code
   */
  @Column(name="CODE", nullable=false)
  public String getCode()
  {
      return mCode;
  }
  /**
   * @param aCode The required value
   */
  public void setCode(String aCode)
  {
      mCode = aCode;
  }

  /**
   * @return description
   */
  @Column(name="DESCRIPTION", nullable=false)
  public String getDescription()
  {
      return mDescription;
  }
  /**
   * @param aDescription The required value
   */
  public void setDescription(String aDescription)
  {
      mDescription = aDescription;
  }

  /**
   * @return allowByDefault
   */
  @Column(name="ALLOW_BY_DEFAULT", nullable=false)
  public Boolean getAllowByDefault()
  {
      return mAllowByDefault;
  }
  /**
   * @param aAllowByDefault The required value
   */
  public void setAllowByDefault(Boolean aAllowByDefault)
  {
      mAllowByDefault = aAllowByDefault;
  }

  /**
   * @return alwaysRequired
   */
  @Column(name="ALWAYS_REQUIRED", nullable=false)
  public Boolean getAlwaysRequired()
  {
      return mAlwaysRequired;
  }
  /**
   * @param aAlwaysRequired The required value
   */
  public void setAlwaysRequired(Boolean aAlwaysRequired)
  {
      mAlwaysRequired = aAlwaysRequired;
  }

  /**
   * @return urls
   */
  @ManyToMany(fetch = FetchType.EAGER,
      cascade = {CascadeType.PERSIST, CascadeType.MERGE},
      mappedBy = "urlGroups",
      targetEntity = Url.class
  )
  public Set<Url> getUrls()
  {
      return mUrls;
  }
  /**
   * @param aUrls The required value
   */
  public void setUrls(Set<Url> aUrls)
  {
      mUrls = aUrls;
  }

  /**
   * @return preRequisites
   */
  /*public Set<UrlGroup> getPreRequisites()
  {
      return mPreRequisites;
  }*/
  /**
   * @param aPreRequisites The required value
   */
  /*public void setPreRequisites(Set<UrlGroup> aPreRequisites)
  {
      mPreRequisites = aPreRequisites;
  }*/

  /**
   * @return roles
   */  
  @ManyToMany(
       cascade = {CascadeType.PERSIST, CascadeType.MERGE},
       mappedBy = "pages",
       targetEntity = Role.class
   )
  public Set<Role> getRoles()
  {
      return mRoles;
  }
  /**
   * @param aRoles The required value
   */
  public void setRoles(Set<Role> aRoles)
  {
      mRoles = aRoles;
  }

  /**
   * @see java.lang.Object#toString()
   * @return A string representation of the object
   */
   @Override
  public String toString()
  {
    StringBuffer buffer = new StringBuffer();
    buffer.append(getClass().getName()).append("@")
      .append(Integer.toHexString(hashCode())).append(" [");
    buffer.append("urlGroupPk").append("='")
      .append(getUrlGroupPk()).append("' ");
    buffer.append("lastUpdated").append("='")
      .append(getLastUpdated()).append("' ");
    buffer.append("code").append("='")
      .append(getCode()).append("' ");
    buffer.append("]");

    return buffer.toString();
  }

  /**
   * @see java.lang.Object#equals(java.lang.Object)
   * @param aOther The reference object with which to compare
   * @return True if this object is the same as the aOther
   *         argument; false otherwise
   */
  @Override
  public boolean equals(Object aOther)
  {
    if (this == aOther)
    {
      return true;
    }
    if (aOther == null)
    {
      return false;
    }
    if (!(aOther instanceof UrlGroup))
    {
      return false;
    }

    UrlGroup castOther = (UrlGroup) aOther;

    return equality(this.getUrlGroupPk(), castOther.getUrlGroupPk())
      && equality(this.getLastUpdated(), castOther.getLastUpdated())
      && equality(this.getCode(), castOther.getCode());
  }

  private boolean equality(Object aFirstObject, Object aSecondObject)
  {
    return
      (aFirstObject == null) == (aSecondObject == null)
        && (aFirstObject != null && aFirstObject.equals(aSecondObject))
          || aFirstObject == null;
  }

  /**
   * @see java.lang.Object#hashCode()
   * @return A hash code value for this object.
   */
  @Override
  public int hashCode()
  {
    int result = 17;

    if (getUrlGroupPk() != null)
    {
      result = 37 * result + getUrlGroupPk().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    if (getLastUpdated() != null)
    {
      result = 37 * result + getLastUpdated().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    if (getCode() != null)
    {
      result = 37 * result + getCode().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    return result;
  }

  // The following is extra code specified in the hbm.xml files

  /**
   * @return A comma separated list of the pre requisite group pks.
   */
  /*public String getPrerequisitePks()
  {
    StringBuilder pks = new StringBuilder();
    for (UrlGroup preReq : mPreRequisites)
    {
      if (pks.length() > 0)
      {
        pks.append(",");
      }
      pks.append(preReq.getUrlGroupPk());
    }
    return pks.toString();
  }*/

  // end of extra code specified in the hbm.xml files

}


