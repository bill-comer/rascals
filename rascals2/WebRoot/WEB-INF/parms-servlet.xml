<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd"   default-autowire="byName">


  <context:component-scan base-package="uk.co.utilisoft.parms" />
  <context:annotation-config />
  
    <!-- Cross product navigation -->

   <bean id="crossProductPropertiesLoader"
         class="org.springframework.beans.factory.config.PropertiesFactoryBean">
     <property name="location">
       <value>file:${uk.co.utilisoft.parms.path}/config/rascals.properties</value>
     </property>
   </bean>

   <bean id="crossProductHelper" class="uk.co.formfill.springutils.web.util.CrossProductPropertyHelper">
     <property name="properties" ref="crossProductPropertiesLoader"/>
   </bean>

  <!-- TILES CONFIGURER START -->

  <bean id="parms.tilesConfigurer"
    class="org.springframework.web.servlet.view.tiles.TilesConfigurer">
    <property name="definitions">
      <list>
        <value>/WEB-INF/tiles-defs.xml</value>
      </list>
    </property>
  </bean>


   <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
      <property name="basenames">
         <list>
           <value>/WEB-INF/messages</value>
           <value>file:${uk.co.utilisoft.parms.path}/config/</value>
         </list>
      </property>
      <property name="cacheSeconds">
         <value>1</value>
      </property>
   </bean>

  <!-- TILES CONFIGURER END -->


  <!--  VIEW RESOLVERS START -->

  <bean
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="order" value="0" />
    <property name="viewClass"
      value="org.springframework.web.servlet.view.tiles.TilesView" />
    <property name="viewNames" value="parms.*" />
    <property name="exposeContextBeansAsAttributes" value="true" />
    <property name="exposedContextBeanNames" value="true" />
  </bean>

  <bean
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="order" value="1" />
    <property name="viewClass"
      value="org.springframework.web.servlet.view.JstlView" />
    <property name="prefix" value="/pages/" />
    <property name="suffix" value=".jsp" />
    <property name="exposeContextBeansAsAttributes" value="true" />
    <property name="exposedContextBeanNames" value="true" />
  </bean>

  <!--  VIEW RESOLVERS END -->

  <!-- LOCALE RESOLVER START -->

  <bean id="parms.fixedLocaleResolver"
    class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
    <property name="defaultLocale" value="en_GB" />
  </bean>

  <!-- LOCALE RESOLVER END -->

  <!-- LOGGING START -->

  <bean id="log4jutils" class="uk.co.formfill.springutils.aspects.logging.Log4JUtils"
    scope="singleton" />

  <bean id="log4jbefore"
    class="uk.co.formfill.springutils.aspects.logging.Log4JBeforeAdvice"
    scope="prototype">
    <property name="logUtils">
      <ref bean="log4jutils" />
    </property>
  </bean>

  <bean id="log4jafter"
    class="uk.co.formfill.springutils.aspects.logging.Log4JAfterAdvice"
    scope="prototype">
    <property name="logUtils">
      <ref bean="log4jutils" />
    </property>
  </bean>

  <bean id="log4jthrows"
    class="uk.co.formfill.springutils.aspects.logging.Log4JThrowsAdvice"
    scope="prototype">
    <property name="logUtils">
      <ref bean="log4jutils" />
    </property>
  </bean>

  <bean id="classFilter"
    class="uk.co.formfill.springutils.aspects.logging.FormfillClassFilter" />

  <bean id="logging.beforeLoggingPointcutAdvisor"
    class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
    <property name="classFilter" ref="classFilter" />
    <property name="mappedName" value="*" />
    <property name="advice">
      <ref bean="log4jbefore" />
    </property>
  </bean>

  <bean id="logging.afterLoggingPointcutAdvisor"
    class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
    <property name="classFilter" ref="classFilter" />
    <property name="mappedName" value="*" />
    <property name="advice">
      <ref bean="log4jafter" />
    </property>
  </bean>

  <bean id="logging.throwsLoggingPointcutAdvisor"
    class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
    <property name="classFilter" ref="classFilter" />
    <property name="mappedName" value="*" />
    <property name="advice">
      <ref bean="log4jthrows" />
    </property>
  </bean>

  <bean id="autoProxyCreator"
    class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

  <!-- LOGGING END -->



</beans>