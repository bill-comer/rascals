package uk.co.utilisoft.afms.domain;
// Generated 26-Nov-2010 10:40:14 by Hibernate Tools 3.1.0.beta5
// with HibernateUtils.


import java.util.Calendar;
import java.util.Collection;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import uk.co.formfill.springutils.security.DbBasedRole;


/**
 * Url generated by hbm2java.
 */
@Entity
@Table(name="AMOPS_URL")
@SuppressWarnings("serial")
public class Url  implements 
        uk.co.formfill.springutils.security.DbBasedUrl
      , java.io.Serializable
{
  // Fields

  private Long mUrlPk;
  private Calendar mLastUpdated;
  private String mUrl;
  private String mDescription;
  private Boolean mAllowByDefault;
  private Set<UrlGroup> mUrlGroups = new HashSet<UrlGroup>(0);

  // Constructors

  /** Default constructor. */
  public Url()
  {
  }

  /**
   * Minimal constructor.
   * @param aUrl The required value
   */
  public Url(String aUrl)
  {
    mUrl = aUrl;
  }

  /**
   * Full constructor.
   * @param aUrl The required value
   * @param aDescription The required value
   * @param aAllowByDefault The required value
   * @param aUrlGroups The required value
   */
  public Url(String aUrl, String aDescription, Boolean aAllowByDefault,
    Set<UrlGroup> aUrlGroups)
  {
    mUrl = aUrl;
    mDescription = aDescription;
    mAllowByDefault = aAllowByDefault;
    mUrlGroups = aUrlGroups;
  }

  // Property accessors and mutators

  /**
   * @return urlPk
   */
  @Id
  @Column(name="URL_PK", nullable=false)
  public Long getUrlPk()
  {
      return mUrlPk;
  }
  /**
   * @param aUrlPk The required value
   */
  public void setUrlPk(Long aUrlPk)
  {
      mUrlPk = aUrlPk;
  }

  /**
   * @return lastUpdated
   */
  @Column(name="LAST_UPD", nullable=false)
  public Calendar getLastUpdated()
  {
      return mLastUpdated;
  }
  /**
   * @param aLastUpdated The required value
   */
  public void setLastUpdated(Calendar aLastUpdated)
  {
      mLastUpdated = aLastUpdated;
  }

  /**
   * @return url
   */
  @Column(name="URL", nullable=false)
  public String getUrl()
  {
      return mUrl;
  }
  /**
   * @param aUrl The required value
   */
  public void setUrl(String aUrl)
  {
      mUrl = aUrl;
  }

  /**
   * @return description
   */
  @Column(name="DESCRIPTION", nullable=false)
  public String getDescription()
  {
      return mDescription;
  }
  /**
   * @param aDescription The required value
   */
  public void setDescription(String aDescription)
  {
      mDescription = aDescription;
  }

  /**
   * @return allowByDefault
   */
  @Column(name="ALLOW_BY_DEFAULT", nullable=false)
  public Boolean getAllowByDefault()
  {
      return mAllowByDefault;
  }
  /**
   * @param aAllowByDefault The required value
   */
  public void setAllowByDefault(Boolean aAllowByDefault)
  {
      mAllowByDefault = aAllowByDefault;
  }

  /**
   * @return urlGroups
   */
  
  @ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
  @JoinTable(name = "AMOPS_URL_URLGROUP", 
      joinColumns = { @JoinColumn(name = "URL_FK") }, 
      inverseJoinColumns = { @JoinColumn(name = "URLGROUP_FK") })
  public Set<UrlGroup> getUrlGroups()
  {
      return mUrlGroups;
  }
  /**
   * @param aUrlGroups The required value
   */
  public void setUrlGroups(Set<UrlGroup> aUrlGroups)
  {
      mUrlGroups = aUrlGroups;
  }

  /**
   * @see java.lang.Object#toString()
   * @return A string representation of the object
   */
   @Override
  public String toString()
  {
    StringBuffer buffer = new StringBuffer();
    buffer.append(getClass().getName()).append("@")
      .append(Integer.toHexString(hashCode())).append(" [");
    buffer.append("lastUpdated").append("='")
      .append(getLastUpdated()).append("' ");
    buffer.append("url").append("='")
      .append(getUrl()).append("' ");
    buffer.append("]");

    return buffer.toString();
  }

  /**
   * @see java.lang.Object#equals(java.lang.Object)
   * @param aOther The reference object with which to compare
   * @return True if this object is the same as the aOther
   *         argument; false otherwise
   */
  @Override
  public boolean equals(Object aOther)
  {
    if (this == aOther)
    {
      return true;
    }
    if (aOther == null)
    {
      return false;
    }
    if (!(aOther instanceof Url))
    {
      return false;
    }

    Url castOther = (Url) aOther;

    return equality(this.getUrlPk(), castOther.getUrlPk())
      && equality(this.getLastUpdated(), castOther.getLastUpdated())
      && equality(this.getUrl(), castOther.getUrl());
  }

  private boolean equality(Object aFirstObject, Object aSecondObject)
  {
    return
      (aFirstObject == null) == (aSecondObject == null)
        && (aFirstObject != null && aFirstObject.equals(aSecondObject))
          || aFirstObject == null;
  }

  /**
   * @see java.lang.Object#hashCode()
   * @return A hash code value for this object.
   */
  @Override
  public int hashCode()
  {
    int result = 17;

    if (getUrlPk() != null)
    {
      result = 37 * result + getUrlPk().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    if (getLastUpdated() != null)
    {
      result = 37 * result + getLastUpdated().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    if (getUrl() != null)
    {
      result = 37 * result + getUrl().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    return result;
  }

  // The following is extra code specified in the hbm.xml files

  /**
   * @return The roles which are allowed to view this url.
   * @see uk.co.formfill.springutils.security.DbBasedUrl#getRoles()
   */
  @Transient // added by Bill -- bodge to get on with compiling !!!
  public Collection<? extends DbBasedRole> getRoles()
  {
    Set<Role> roles = new HashSet<Role>();
    for (UrlGroup urlGroup : mUrlGroups)
    {
      roles.addAll(urlGroup.getRoles());
    }
    return roles;
  }

  // end of extra code specified in the hbm.xml files

}


