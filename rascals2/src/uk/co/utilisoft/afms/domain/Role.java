package uk.co.utilisoft.afms.domain;
// Generated 26-Nov-2010 10:40:14 by Hibernate Tools 3.1.0.beta5
// with HibernateUtils.


import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Role generated by hbm2java.
 */
@Entity
 @Table(name="AMOPS_ROLE")
 @SuppressWarnings("serial")
public class Role  implements 
         uk.co.formfill.springutils.security.DbBasedRole
      , java.io.Serializable
{
  // Fields

  private Long mRolePk;
  private Calendar mLastUpdated;
  private String mShortRoleName;
  private String mDisplayRoleName;
  private Set<User> mUsers = new HashSet<User>(0);
  private Set<UrlGroup> mPages = new HashSet<UrlGroup>(0);
  private Date mEndDate;

  // Constructors

  /** Default constructor. */
  public Role()
  {
  }

  /**
   * Minimal constructor.
   * @param aShortRoleName The required value
   * @param aDisplayRoleName The required value
   */
  public Role(String aShortRoleName, String aDisplayRoleName)
  {
    mShortRoleName = aShortRoleName;
    mDisplayRoleName = aDisplayRoleName;
  }

  /**
   * Full constructor.
   * @param aShortRoleName The required value
   * @param aDisplayRoleName The required value
   * @param aUsers The required value
   * @param aPages The required value
   * @param aEndDate The required value
   */
  public Role(String aShortRoleName, String aDisplayRoleName, Set<User> aUsers,
    Set<UrlGroup> aPages, Date aEndDate)
  {
    mShortRoleName = aShortRoleName;
    mDisplayRoleName = aDisplayRoleName;
    mUsers = aUsers;
    mPages = aPages;
    mEndDate = aEndDate;
  }

  // Property accessors and mutators

  /**
   * @return rolePk
   */
  @Id
  @Column(name="ROLE_PK", nullable=false)
  public Long getRolePk()
  {
      return mRolePk;
  }
  /**
   * @param aRolePk The required value
   */
  public void setRolePk(Long aRolePk)
  {
      mRolePk = aRolePk;
  }

  /**
   * @return lastUpdated
   */
  @Column(name="LAST_UPD", nullable=false)
  public Calendar getLastUpdated()
  {
      return mLastUpdated;
  }
  /**
   * @param aLastUpdated The required value
   */
  public void setLastUpdated(Calendar aLastUpdated)
  {
      mLastUpdated = aLastUpdated;
  }

  /**
   * @return shortRoleName
   */
  @Column(name="SHORTROLENAME", nullable=false)
  public String getShortRoleName()
  {
      return mShortRoleName;
  }
  /**
   * @param aShortRoleName The required value
   */
  public void setShortRoleName(String aShortRoleName)
  {
      mShortRoleName = aShortRoleName;
  }

  /**
   * @return displayRoleName
   */
  @Column(name="DISPLAYROLENAME", nullable=false)
  public String getDisplayRoleName()
  {
      return mDisplayRoleName;
  }
  /**
   * @param aDisplayRoleName The required value
   */
  public void setDisplayRoleName(String aDisplayRoleName)
  {
      mDisplayRoleName = aDisplayRoleName;
  }

  /**
   * @return users
   */
  @ManyToMany(cascade = CascadeType.ALL)
  @JoinTable(name = "AMOPS_AUTHORITY", 
      joinColumns = { @JoinColumn(name = "ROLE_FK") }, 
      inverseJoinColumns = { @JoinColumn(name = "USER_FK") })
  public Set<User> getUsers()
  {
      return mUsers;
  }
  /**
   * @param aUsers The required value
   */
  public void setUsers(Set<User> aUsers)
  {
      mUsers = aUsers;
  }

  /**
   * @return pages
   */
  @ManyToMany(cascade = CascadeType.ALL)
  @JoinTable(name = "AMOPS_ROLE_URLGROUP", 
      joinColumns = { @JoinColumn(name = "ROLE_FK") }, 
      inverseJoinColumns = { @JoinColumn(name = "URLGROUP_FK") })
  public Set<UrlGroup> getPages()
  {
      return mPages;
  }
  /**
   * @param aPages The required value
   */
  public void setPages(Set<UrlGroup> aPages)
  {
      mPages = aPages;
  }

  /**
   * @return endDate
   */
  @Column(name="END_DATE", nullable=false)
  public Date getEndDate()
  {
      return mEndDate;
  }
  /**
   * @param aEndDate The required value
   */
  public void setEndDate(Date aEndDate)
  {
      mEndDate = aEndDate;
  }

  /**
   * @see java.lang.Object#toString()
   * @return A string representation of the object
   */
   @Override
  public String toString()
  {
    StringBuffer buffer = new StringBuffer();
    buffer.append(getClass().getName()).append("@")
      .append(Integer.toHexString(hashCode())).append(" [");
    buffer.append("lastUpdated").append("='")
      .append(getLastUpdated()).append("' ");
    buffer.append("shortRoleName").append("='")
      .append(getShortRoleName()).append("' ");
    buffer.append("displayRoleName").append("='")
      .append(getDisplayRoleName()).append("' ");
    buffer.append("endDate").append("='")
      .append(getEndDate()).append("' ");
    buffer.append("]");

    return buffer.toString();
  }

  /**
   * @see java.lang.Object#equals(java.lang.Object)
   * @param aOther The reference object with which to compare
   * @return True if this object is the same as the aOther
   *         argument; false otherwise
   */
  @Override
  public boolean equals(Object aOther)
  {
    if (this == aOther)
    {
      return true;
    }
    if (aOther == null)
    {
      return false;
    }
    if (!(aOther instanceof Role))
    {
      return false;
    }

    Role castOther = (Role) aOther;

    return equality(this.getRolePk(), castOther.getRolePk())
      && equality(this.getLastUpdated(), castOther.getLastUpdated())
      && equality(this.getShortRoleName(), castOther.getShortRoleName())
      && equality(this.getDisplayRoleName(),
        castOther.getDisplayRoleName());
  }

  private boolean equality(Object aFirstObject, Object aSecondObject)
  {
    return
      (aFirstObject == null) == (aSecondObject == null)
        && (aFirstObject != null && aFirstObject.equals(aSecondObject))
          || aFirstObject == null;
  }

  /**
   * @see java.lang.Object#hashCode()
   * @return A hash code value for this object.
   */
  @Override
  public int hashCode()
  {
    int result = 17;

    if (getRolePk() != null)
    {
      result = 37 * result + getRolePk().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    if (getLastUpdated() != null)
    {
      result = 37 * result + getLastUpdated().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    if (getShortRoleName() != null)
    {
      result = 37 * result + getShortRoleName().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    if (getDisplayRoleName() != null)
    {
      result = 37 * result + getDisplayRoleName().hashCode();
    }
    else
    {
      result = 37 * result;
    }

    return result;
  }

  // The following is extra code specified in the hbm.xml files

  private static final long serialVersionUID = 1L;

  // end of extra code specified in the hbm.xml files

}


